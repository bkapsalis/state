{"version":3,"sources":["assets/spinner.gif","utils/reducers.js","utils/actions.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","products","categories","currentCategory","cart","cartOpen","reducers","state","arguments","length","undefined","action","type","_objectSpread","_toConsumableArray","concat","product","map","_id","purchaseQuantity","newState","filter","createStore","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","dispatch","useDispatch","useSelector","image","name","price","quantity","React","createElement","className","Link","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","_useQuery","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CategoryMenu","categoryData","id","CartItem","_ref","placeholder","value","onChange","target","role","aria-label","removeFromCart","AuthService","_classCallCheck","_createClass","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","record","__await","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","_slicedToArray","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_callee","_context","apply","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","variables","Home","Detail","useParams","_useState","useState","_useState2","currentProduct","setCurrentProduct","indexedProducts","Fragment","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Provider","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cfd3ee30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","import {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nconst initialState = {\n  products: [],\n  categories: [],\n  currentCategory: '',\n  cart: [],\n  cartOpen: false\n};\n\nexport const reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nexport default createStore(reducers);","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ProductItem(item) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const { image, name, _id, price, quantity } = item;\n\n  const { cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img alt={name} src={`/images/${image}`} />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>\n          {quantity} {pluralize('item', quantity)} in stock\n        </div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Cart from '../components/Cart';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from 'react';\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 560,\n        clear: 'both',\n        paddingTop: 120,\n        textAlign: 'center',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\nimport Auth from '../../utils/auth';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">Order History</Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">\n            🛍️\n          </span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}